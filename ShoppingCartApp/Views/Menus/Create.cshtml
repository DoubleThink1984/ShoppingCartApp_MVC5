@model ShoppingCartApp.Models.Category
@using ShoppingCartApp.Models
@using ShoppingCartApp.Presentation;

<script src="~/Scripts/site.js"></script>

<script src="~/Scripts/jquery.validate.min.js"></script>

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm("Create", "Menus", FormMethod.Post, new { enctype = "multipart/form-data", @class = "fileUpload" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Category</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ClassName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClassName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClassName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ParentClassID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    List<SelectListItem> selectList = new List<SelectListItem>();

                    foreach (Category item in HierarchicalModelLists.Categories)
                    {
                        selectList.Add(new SelectListItem() { Text = item.ClassName, Value = item.ClassId.ToString() });
                    }
                }
                @Html.DropDownListFor(model => model.ParentClassID, selectList, "-- Make Main Category--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ParentClassID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <label for="image" class="control-label col-md-2">Upload Image</label>
        <div class="form-group">
            <input type="file" name="file" accept="image/*" class="btn btn-default btn-file fileUpload" id="image" />
            <div class="text-danger">@ViewBag.Message</div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
